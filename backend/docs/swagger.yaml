openapi: 3.0.0
info:
  title: GPASS API
  version: 1.0.0
  description: |-
    This is the API documentation for the GPASS project.
  contact:
    email: hahaisme@haha.WhySoSerious

tags:
  - name: exams
    description: Everything about your exams

paths:
  /api/1.0/exams/upload:
    post:
      tags:
        - exams
      summary: Upload exams
      description: Use this request to upload exams
      operationId: uploadExams
      requestBody:
        description: Exam object that needs to be uploaded
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                className:
                  type: string
                  description: The class name of the exam
                grade:
                  type: string
                  description: The grade of the exam
                type:
                  type: string
                  description: The type of the exam
                year:
                  type: string
                  description: The year of the exam
                teacher:
                  type: string
                  description: The teacher of the exam
                main_file:
                  type: string
                  format: binary
                  description: The main image of the exam
                ans_file:
                  type: string
                  format: binary
                  description: The images of the exam
                sheet_files:
                  type: array
                  items:
                    type: string
                    format: binary
                  description: The images of the exam
                has_ans:
                  type: boolean
                  description: Whether the exam has answer
                  example: true
              required:
                - type
                - year
                - teacher
                - main_file
                - has_ans

      responses:
        "200":
          description: Exam uploaded successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Exam"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                type: string
                description: The error message
              example:
                message: Bad request
        "415":
          description: No file uploaded
          content:
            application/json:
              schema:
                type: string
                description: The error message
              example:
                message: Please upload a file
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                type: string
                description: The error message
              example:
                message: Internal server error
  /api/1.0/exams/{classId}:
    get:
      tags:
        - exams
      summary: Get exams
      description: Use this request to get exams
      operationId: getExams
      parameters:
        - name: classId
          in: path
          description: The class ID
          required: true
          schema:
            type: string
          example: 7
        - name: paging
          in: query
          description: The paging of the search result
          required: false
          schema:
            type: integer
            format: int64
            default: null
      responses:
        "200":
          description: Exams retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Exam"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                type: string
                description: The error message
              example:
                message: Bad request
        "404":
          description: Class not found
          content:
            application/json:
              schema:
                type: string
                description: The error message
              example:
                message: Class not found
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                type: string
                description: The error message
              example:
                message: Internal server error
  /api/1.0/exams/details/{examId}:
    get:
      tags:
        - exams
      summary: Get exam details
      description: Use this request to get exam details
      operationId: getExamDetails
      parameters:
        - name: examId
          in: path
          description: The exam ID
          required: true
          schema:
            type: string
          example: 14
      responses:
        "200":
          description: Exam details retrieved successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Exam"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                type: string
                description: The error message
              example:
                message: Bad request
        "404":
          description: Exam not found
          content:
            application/json:
              schema:
                type: string
                description: The error message
              example:
                message: Exam not found
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                type: string
                description: The error message
              example:
                message: Internal server error
    put:
      tags:
        - exams
      summary: Update exam details
      description: Use this request to update exam details
      operationId: updateExamDetails
      parameters:
        - name: examId
          in: path
          description: The exam ID
          required: true
          schema:
            type: string
          example: 14
      requestBody:
        description: Exam object that needs to be updated
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                classId:
                  type: string
                  description: The class ID of the exam
                  example: 9
                className:
                  type: string
                  description: The class name of the exam
                type:
                  type: string
                  description: The type of the exam
                year:
                  type: string
                  description: The year of the exam
                teacher:
                  type: string
                  description: The teacher of the exam
                main_file:
                  type: string
                  format: binary
                  description: The main image of the exam
                ans_file:
                  type: string
                  format: binary
                  description: The images of the exam
                sheet_files:
                  type: array
                  items:
                    type: string
                    format: binary
                  description: The images of the exam
                has_ans:
                  type: boolean
                  description: Whether the exam has answer
                  example: true
              required:
                - classId
              #   - type
              #   - year
              #   - teacher
              #   - main_file
              #   - has_ans
      responses:
        "200":
          description: Exam details updated successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Exam"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                type: string
                description: The error message
              example:
                message: Bad request
        "404":
          description: Exam not found
          content:
            application/json:
              schema:
                type: string
                description: The error message
              example:
                message: Exam not found
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                type: string
                description: The error message
              example:
                message: Internal server error
    delete:
      tags:
        - exams
      summary: Delete exam
      description: Use this request to delete exam
      operationId: deleteExam
      parameters:
        - name: examId
          in: path
          description: The exam ID
          required: true
          schema:
            type: string
          example: 14
      responses:
        "200":
          description: Exam deleted successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Exam"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                type: string
                description: The error message
              example:
                message: Bad request
        "404":
          description: Exam not found
          content:
            application/json:
              schema:
                type: string
                description: The error message
              example:
                message: Exam not found
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                type: string
                description: The error message
              example:
                message: Internal server error
  /api/1.0/user/signin:
    post:
      tags:
        - user
      summary: Sign in
      description: Use this request to sign in
      operationId: signIn
      requestBody:
        description: User object that needs to be signed in
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                provider:
                  type: string
                  description: The provider of the user
                email:
                  type: string
                  description: The email of the user
                password:
                  type: string
                  description: The password of the user
                access_token:
                  type: string
                  description: The access token of the user
              required:
                - provider
      responses:
        "200":
          description: User signed in successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                type: string
                description: The error message
              example:
                message: Bad request
        "403":
          description: Sign in failed
          content:
            application/json:
              schema:
                type: string
                description: The error message
              example:
                message: Email or password incorrect
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                type: string
                description: The error message
              example:
                message: Internal server error
  /api/1.0/user/profile:
    get:
      tags:
        - user
      summary: Get user profile
      description: Use this request to get user profile
      operationId: getprofile
      security:
        - bearerAuth: []
      parameters:
        - name: Authorization
          in: header
          description: The authorization token
          required: true
          schema:
            type: string
      responses:
        "200":
          description: User profile retrieved successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserProfile"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: string
                description: The error message
              example:
                message: Token missing
        "403":
          description: Wrong token
          content:
            application/json:
              schema:
                type: string
                description: The error message
              example:
                message: Invalid token
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                type: string
                description: The error message
              example:
                message: Internal server error
  /api/1.0/exercises/{examId}:
    get:
      tags:
        - exercises
      summary: Get exercises
      description: Use this request to get exercises
      operationId: getExercises
      parameters:
        - name: examId
          in: path
          description: The exam ID
          required: true
          schema:
            type: string
          example: 14
        - name: paging
          in: query
          description: The paging of the search result
          required: false
          schema:
            type: integer
            format: int64
            default: null
      responses:
        "200":
          description: Exercises retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ExerciseList"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                type: string
                description: The error message
              example:
                message: Bad request
        "404":
          description: Exam not found
          content:
            application/json:
              schema:
                type: string
                description: The error message
              example:
                message: Exam not found
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                type: string
                description: The error message
              example:
                message: Internal server error
  /api/1.0/exercises/details/{exerciseId}:
    get:
      tags:
        - exercises
      summary: Get exercise
      description: Use this request to get exercise
      operationId: getExercise
      parameters:
        # - name: examId
        #   in: path
        #   description: The exam ID
        #   required: true
        #   schema:
        #     type: string
        #   example: 14
        - name: exerciseId
          in: path
          description: The exercise ID
          required: true
          schema:
            type: string
          example: 2
      responses:
        "200":
          description: Exercise retrieved successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Exercise"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                type: string
                description: The error message
              example:
                message: Bad request
        "404":
          description: Exercise not found
          content:
            application/json:
              schema:
                type: string
                description: The error message
              example:
                message: Exercise not found
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                type: string
                description: The error message
              example:
                message: Internal server error
    put:
      tags:
        - exercises
      summary: Update exercise
      description: Use this request to update exercise
      operationId: updateExercise
      parameters:
        - name: exerciseId
          in: path
          description: The exercise ID
          required: true
          schema:
            type: string
          example: 2
      requestBody:
        description: Exercise object that needs to be updated
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                question:
                  type: string
                  description: The question of the exercise
                content:
                  type: string
                  description: The content of the exercise
                exercise_files:
                  type: array
                  items:
                    type: string
                    format: binary
                  description: The images of the exercise
      responses:
        "200":
          description: Exercise updated successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Exercise"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                type: string
                description: The error message
        "404":
          description: Exercise not found
          content:
            application/json:
              schema:
                type: string
                description: The error message
        "415":
          description: No file uploaded
          content:
            application/json:
              schema:
                type: string
                description: The error message
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                type: string
                description: The error message
    delete:
      tags:
        - exercises
      summary: Delete exercise
      description: Use this request to delete exercise
      operationId: deleteExercise
      parameters:
        - name: exerciseId
          in: path
          description: The exercise ID
          required: true
          schema:
            type: string
          example: 2
      responses:
        "200":
          description: Exercise deleted successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Exercise"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                type: string
                description: The error message
        "404":
          description: Exercise not found
          content:
            application/json:
              schema:
                type: string
                description: The error message
        "415":
          description: No file uploaded
          content:
            application/json:
              schema:
                type: string
                description: The error message
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                type: string
                description: The error message
  /api/1.0/exercises/upload/{examId}:
    post:
      tags:
        - exercises
      summary: Upload exercises
      description: Use this request to upload exercises
      operationId: uploadExercises
      parameters:
        - name: examId
          in: path
          description: The exam ID
          required: true
          schema:
            type: string
          example: 14
      requestBody:
        description: Exercise object that needs to be uploaded
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                question:
                  type: string
                  description: The question of the exercise
                content:
                  type: string
                  description: The content of the exercise
                exercise_files:
                  type: array
                  items:
                    type: string
                    format: binary
                  description: The images of the exercise
      responses:
        "200":
          description: Exercise uploaded successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ExerciseList"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                type: string
                description: The error message
        "415":
          description: No file uploaded
          content:
            application/json:
              schema:
                type: string
                description: The error message
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                type: string
                description: The error message
  /api/1.0/answers/{exerciseId}:
    get:
      tags:
        - answers
      summary: Get answers
      description: Use this request to get answers
      operationId: getAnswers
      parameters:
        - name: exerciseId
          in: path
          description: The exercise ID
          required: true
          schema:
            type: string
          example: 2
        - name: paging
          in: query
          description: The paging of the search result
          required: false
          schema:
            type: integer
            format: int64
            default: null
      responses:
        "200":
          description: Answers retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Answer"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                type: string
                description: The error message

        "404":
          description: Exercise not found
          content:
            application/json:
              schema:
                type: string
                description: The error message
              example:
                message: Exercise not found
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                type: string
                description: The error message
  /api/1.0/answers/upload/{exerciseId}:
    post:
      tags:
        - answers
      summary: Upload answers
      description: Use this request to upload answers
      operationId: uploadAnswers
      parameters:
        - name: exerciseId
          in: path
          description: The exercise ID
          required: true
          schema:
            type: string
          example: 2
      requestBody:
        description: Answer object that needs to be uploaded
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                content:
                  type: string
                  description: The content of the answer
                image_url:
                  type: string
                  format: binary
                  description: The image of the answer
      responses:
        "200":
          description: Answer uploaded successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Answer"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                type: string
                description: The error message

        "404":
          description: Exercise not found
          content:
            application/json:
              schema:
                type: string
                description: The error message
              example:
                message: Exercise not found
        "415":
          description: No file uploaded
          content:
            application/json:
              schema:
                type: string
                description: The error message
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                type: string
                description: The error message
  /api/1.0/answers/details/{answerId}:
    put:
      tags:
        - answers
      summary: Update answer
      description: Use this request to update answer
      operationId: updateAnswer
      parameters:
        - name: answerId
          in: path
          description: The answer ID
          required: true
          schema:
            type: string
          example: 2
      requestBody:
        description: Answer object that needs to be updated
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                content:
                  type: string
                  description: The content of the answer
                image_url:
                  type: string
                  format: binary
                  description: The image of the answer
      responses:
        "200":
          description: Answer updated successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Answer"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                type: string
                description: The error message

        "404":
          description: Answer not found
          content:
            application/json:
              schema:
                type: string
                description: The error message
              example:
                message: Answer not found
        "415":
          description: No file uploaded
          content:
            application/json:
              schema:
                type: string
                description: The error message
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                type: string
                description: The error message
    delete:
      tags:
        - answers
      summary: Delete answer
      description: Use this request to delete answer
      operationId: deleteAnswer
      parameters:
        - name: answerId
          in: path
          description: The answer ID
          required: true
          schema:
            type: string
          example: 2
      responses:
        "200":
          description: Answer deleted successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Answer"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                type: string
                description: The error message

        "404":
          description: Answer not found
          content:
            application/json:
              schema:
                type: string
                description: The error message
              example:
                message: Answer not found
        "415":
          description: No file uploaded
          content:
            application/json:
              schema:
                type: string
                description: The error message
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                type: string
                description: The error message
components:
  schemas:
    Exam:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
          description: The exam ID
        type:
          type: string
          example: midterm
          description: The type of the exam
        teacher:
          type: string
          example: Haha
          description: The teacher of the exam
        year:
          type: string
          example: 2020
          description: The year of the exam
        rating_id:
          type: integer
          format: int64
          example: 1
          description: The rating ID of the exam
        main_file:
          type: string
          example: https://example.com/file.pdf
          description: The main file of the exam
        ans_file:
          type: string
          example: https://example.com/file.pdf
          description: The answer file of the exam
        sheet_files:
          type: array
          items:
            type: string
            example: https://example.com/file.pdf
          description: The sheet files of the exam
        has_ans:
          type: boolean
          example: true
          description: Whether the exam has answer
    User:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
          description: The user ID
        provider:
          type: string
          example: facebook
          description: The provider of the user
        name:
          type: string
          example: Haha
          description: The name of the user
        email:
          type: string
          example: hahaisme@haha.whysoserious
          description: The email of the user
        photo:
          type: string
          example: https://example.com/image.jpg
          description: The photo of the user
    UserProfile:
      type: object
      properties:
        provider:
          type: string
          example: facebook
          description: The provider of the user
        name:
          type: string
          example: Haha
          description: The name of the user
        email:
          type: string
          example: hahaisme@haha.whysoserious
          description: The email of the user
        photo:
          type: string
          example: https://example.com/image.jpg
          description: The photo of the user
    ExerciseList:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
          description: The exercise ID
        exam_id:
          type: integer
          format: int64
          example: 1
          description: The exam ID
        question:
          type: string
          example: 2+2=?
          description: The question of the exercise
        content:
          type: string
          example: 4
          description: The content of the exercise
        creator_id:
          type: integer
          format: int64
          example: 1
          description: The creator ID of the exercise
        created_at:
          type: string
          example: 2020-01-01 00:00:00
          description: The created time of the exercise
        updated_at:
          type: string
          example: 2020-01-01 00:00:00
          description: The updated time of the exercise
        deleted_at:
          type: string
          example: 2020-01-01 00:00:00
          description: The deleted time of the exercise
    Exercise:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
          description: The exercise ID
        exam_id:
          type: integer
          format: int64
          example: 1
          description: The exam ID
        question:
          type: string
          example: 2+2=?
          description: The question of the exercise
        content:
          type: string
          example: 4
          description: The content of the exercise
        creator_id:
          type: integer
          format: int64
          example: 1
          description: The creator ID of the exercise
        created_at:
          type: string
          example: 2020-01-01 00:00:00
          description: The created time of the exercise
        updated_at:
          type: string
          example: 2020-01-01 00:00:00
          description: The updated time of the exercise
        deleted_at:
          type: string
          example: 2020-01-01 00:00:00
          description: The deleted time of the exercise
        images:
          type: array
          items:
            type: string
            example: https://example.com/image.jpg
          description: The images of the exercise
    Answer:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
          description: The answer ID
        exercise_id:
          type: integer
          format: int64
          example: 1
          description: The exercise ID
        content:
          type: string
          example: 4
          description: The content of the answer
        creator_id:
          type: integer
          format: int64
          example: 1
          description: The creator ID of the answer
        created_at:
          type: string
          example: 2020-01-01 00:00:00
          description: The created time of the answer
        updated_at:
          type: string
          example: 2020-01-01 00:00:00
          description: The updated time of the answer
        image_url:
          type: string
          example: https://example.com/image.jpg
          description: The image of the answer
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

# upstream client {
#   server frontend:3000;
# }

upstream api {
  server backend:5000;
}

server {
  listen 80;
  server_name adeliu-stylish.store;

  location ~ /.well-known {
    allow all;
  }
  
  location / {
      proxy_pass http://api/;
  }

  location /images/ {
        alias /app/public/images/;
  }

  location /api/ {
      proxy_pass http://api/api/;

      if ($request_method = 'POST') {
        add_header 'Access-Control-Allow-Origin' '*' always;
        add_header 'Access-Control-Allow-Methods' '*' always;
        add_header 'Access-Control-Allow-Headers' '*' always;
        add_header 'Access-Control-Expose-Headers' '*' always;
     }
     if ($request_method = 'GET') {
        add_header 'Access-Control-Allow-Origin' '*' always;
        add_header 'Access-Control-Allow-Methods' '*' always;
        add_header 'Access-Control-Allow-Headers' '*' always;
        add_header 'Access-Control-Expose-Headers' '*' always;
     }
  }

  location /auth/ {
      rewrite /api/(.*) /$1 break;
      proxy_pass http://api/auth/;
  }
  
  location /healthcheck {
      rewrite /api/(.*) /$1 break;
      proxy_pass http://api/healthcheck;
  }

  location /docs {
      rewrite /api/(.*) /$1 break;
      proxy_pass http://api/docs;
  }
  
  location /login {
      rewrite /api/(.*) /$1 break;
      proxy_pass http://api/login;
  }

  listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/adeliu-stylish.store/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/adeliu-stylish.store/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot

}

server {
    if ($host = adeliu-stylish.store) {
        return 301 https://$host$request_uri;
    } # managed by Certbot


    listen 80;
    server_name adeliu-stylish.store;
    return 404; # managed by Certbot


}